// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AgroTrade
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Testing Create Product")]
    public partial class TestingCreateProductFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TestCreateProduct.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Testing Create Product", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Testing Creation of Product")]
        [NUnit.Framework.TestCaseAttribute("\"ABC\"", "\"Rice\"", "\"abc@gmail.com\"", "\"1234567890\"", "\"Submit\"", "\"Ok\"", "\"Product Added Successfully\"", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\"ABC1111\"", "\"Rice\"", "\"abc@gmail.com\"", "\"1234567890\"", "\"Submit\"", "\"Ok\"", "\"Data is invalid\"", new string[0])]
        public virtual void TestingCreationOfProduct(string farmername, string productname, string email, string phone, string submitbutton, string okbutton, string message, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Testing Creation of Product", exampleTags);
#line 2
this.ScenarioSetup(scenarioInfo);
#line 3
testRunner.Given(string.Format("farmer {0} has entered product {1}", farmername, productname), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 4
testRunner.And(string.Format("his email is {0} and phone {1}", email, phone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 5
testRunner.When(string.Format("click on button {0}", submitbutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
testRunner.Then(string.Format("System display message {0} with button {1}", message, okbutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 7
testRunner.And(string.Format("clicking on button {0} will take seller on page <homepage>", okbutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Testing of invalid data")]
        [NUnit.Framework.TestCaseAttribute("\"ABC123\"", "\"Rice\"", "\"abc@gmail.com\"", "\"1234567890\"", "\"Submit\"", "\"Ok\"", "\"Data is invalid\"", new string[0])]
        public virtual void TestingOfInvalidData(string farmername, string productname, string email, string phone, string submitbutton, string okbutton, string message, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Testing of invalid data", exampleTags);
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
testRunner.Given(string.Format("farmer {0} has the entered product {1}", farmername, productname), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
testRunner.And(string.Format("his email is {0} and with phone {1}", email, phone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.When(string.Format("farmer click on button {0}", submitbutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
testRunner.Then(string.Format("System display the message {0} with button {1}", message, okbutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
testRunner.And(string.Format("clicking on the button {0} will take seller on page <homepage>", okbutton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
